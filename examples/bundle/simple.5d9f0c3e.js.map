{"mappings":"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","sources":["examples/simple.js"],"sourcesContent":["import {\n\tWebGLRenderer,\n\tPCFSoftShadowMap,\n\tScene,\n\tDirectionalLight,\n\tAmbientLight,\n\tPerspectiveCamera,\n\tBoxGeometry,\n\tDoubleSide,\n\tFrontSide,\n\tMesh,\n\tBufferGeometry,\n\tMeshStandardMaterial,\n\tMeshBasicMaterial,\n\tSphereGeometry,\n\tMathUtils,\n\tCylinderGeometry,\n\tTorusGeometry,\n\tTorusKnotGeometry,\n\tBufferAttribute,\n} from 'three';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { MeshBVHVisualizer } from 'three-mesh-bvh';\nimport {\n\tBrush,\n\tEvaluator,\n\tEdgesHelper,\n\tTriangleSetHelper,\n\tlogTriangleDefinitions,\n\tGridMaterial,\n\tADDITION,\n\tSUBTRACTION,\n\tREVERSE_SUBTRACTION,\n\tINTERSECTION,\n\tDIFFERENCE,\n\tHOLLOW_INTERSECTION,\n\tHOLLOW_SUBTRACTION,\n} from '..';\n\nwindow.logTriangleDefinitions = logTriangleDefinitions;\n\nconst params = {\n\n\tbrush1Shape: 'box',\n\tbrush1Complexity: 1,\n\tbrush1Color: '#ffffff',\n\n\tbrush2Shape: 'sphere',\n\tbrush2Complexity: 1,\n\tbrush2Color: '#E91E63',\n\n\toperation: SUBTRACTION,\n\twireframe: false,\n\tdisplayBrushes: true,\n\tdisplayControls: true,\n\tshadows: true,\n\tvertexColors: false,\n\tflatShading: false,\n\tgridTexture: false,\n\tuseGroups: true,\n\n\tenableDebugTelemetry: true,\n\tdisplayIntersectionEdges: false,\n\tdisplayTriangleIntersections: false,\n\tdisplayBrush1BVH: false,\n\tdisplayBrush2BVH: false,\n\n};\n\nlet renderer, camera, scene, gui, outputContainer;\nlet controls, transformControls;\nlet brush1, brush2;\nlet resultObject, wireframeResult, light, originalMaterial;\nlet edgesHelper, trisHelper;\nlet bvhHelper1, bvhHelper2;\nlet bunnyGeom;\nlet needsUpdate = true;\nlet csgEvaluator;\n\nconst materialMap = new Map();\n\ninit();\n\nasync function init() {\n\n\tconst bgColor = 0x111111;\n\n\toutputContainer = document.getElementById( 'output' );\n\n\t// renderer setup\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.shadowMap.enabled = true;\n\trenderer.shadowMap.type = PCFSoftShadowMap;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new Scene();\n\n\t// lights\n\tlight = new DirectionalLight( 0xffffff, 3.5 );\n\tlight.position.set( - 1, 2, 3 );\n\tscene.add( light, light.target );\n\tscene.add( new AmbientLight( 0xb0bec5, 0.35 ) );\n\n\t// shadows\n\tconst shadowCam = light.shadow.camera;\n\tlight.castShadow = true;\n\tlight.shadow.mapSize.setScalar( 4096 );\n\tlight.shadow.bias = 1e-5;\n\tlight.shadow.normalBias = 1e-2;\n\n\tshadowCam.left = shadowCam.bottom = - 2.5;\n\tshadowCam.right = shadowCam.top = 2.5;\n\tshadowCam.updateProjectionMatrix();\n\n\t// camera setup\n\tcamera = new PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 1, 2, 4 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\t// controls\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\ttransformControls = new TransformControls( camera, renderer.domElement );\n\ttransformControls.setSize( 0.75 );\n\ttransformControls.addEventListener( 'dragging-changed', e => {\n\n\t\tcontrols.enabled = ! e.value;\n\n\t} );\n\ttransformControls.addEventListener( 'objectChange', () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tscene.add( transformControls );\n\n\t// bunny mesh has no UVs so skip that attribute\n\tcsgEvaluator = new Evaluator();\n\tcsgEvaluator.attributes = [ 'position', 'normal' ];\n\n\t// initialize brushes\n\tbrush1 = new Brush( new BoxGeometry(), new GridMaterial() );\n\tbrush2 = new Brush( new BoxGeometry(), new GridMaterial() );\n\tbrush2.position.set( - 0.75, 0.75, 0 );\n\tbrush2.scale.setScalar( 0.75 );\n\n\tupdateBrush( brush1, params.brush1Shape, params.brush1Complexity );\n\tupdateBrush( brush2, params.brush2Shape, params.brush2Complexity );\n\n\t// initialize materials\n\tbrush1.material.opacity = 0.15;\n\tbrush1.material.transparent = true;\n\tbrush1.material.depthWrite = false;\n\tbrush1.material.polygonOffset = true;\n\tbrush1.material.polygonOffsetFactor = 0.2;\n\tbrush1.material.polygonOffsetUnits = 0.2;\n\tbrush1.material.side = DoubleSide;\n\tbrush1.material.premultipliedAlpha = true;\n\n\tbrush2.material.opacity = 0.15;\n\tbrush2.material.transparent = true;\n\tbrush2.material.depthWrite = false;\n\tbrush2.material.polygonOffset = true;\n\tbrush2.material.polygonOffsetFactor = 0.2;\n\tbrush2.material.polygonOffsetUnits = 0.2;\n\tbrush2.material.side = DoubleSide;\n\tbrush2.material.premultipliedAlpha = true;\n\tbrush2.material.roughness = 0.25;\n\tbrush2.material.color.set( 0xE91E63 );\n\n\tbrush1.receiveShadow = true;\n\tbrush2.receiveShadow = true;\n\ttransformControls.attach( brush2 );\n\n\tscene.add( brush1, brush2 );\n\n\t// create material map for transparent to opaque variants\n\tlet mat;\n\tmat = brush1.material.clone();\n\tmat.side = FrontSide;\n\tmat.opacity = 1;\n\tmat.transparent = false;\n\tmat.depthWrite = true;\n\tmaterialMap.set( brush1.material, mat );\n\n\tmat = brush2.material.clone();\n\tmat.side = FrontSide;\n\tmat.opacity = 1;\n\tmat.transparent = false;\n\tmat.depthWrite = true;\n\tmaterialMap.set( brush2.material, mat );\n\n\tmaterialMap.forEach( ( m1, m2 ) => {\n\n\t\tm1.enableGrid = params.gridTexture;\n\t\tm2.enableGrid = params.gridTexture;\n\n\t} );\n\n\t// add object displaying the result\n\tresultObject = new Mesh( new BufferGeometry(), new MeshStandardMaterial( {\n\t\tflatShading: false,\n\t\tpolygonOffset: true,\n\t\tpolygonOffsetUnits: 0.1,\n\t\tpolygonOffsetFactor: 0.1,\n\t} ) );\n\tresultObject.castShadow = true;\n\tresultObject.receiveShadow = true;\n\toriginalMaterial = resultObject.material;\n\tscene.add( resultObject );\n\n\t// add wireframe representation\n\twireframeResult = new Mesh( resultObject.geometry, new MeshBasicMaterial( {\n\t\twireframe: true,\n\t\tcolor: 0,\n\t\topacity: 0.15,\n\t\ttransparent: true,\n\t} ) );\n\tscene.add( wireframeResult );\n\n\t// helpers\n\tedgesHelper = new EdgesHelper();\n\tedgesHelper.color.set( 0xE91E63 );\n\tscene.add( edgesHelper );\n\n\ttrisHelper = new TriangleSetHelper();\n\ttrisHelper.color.set( 0x00BCD4 );\n\tscene.add( trisHelper );\n\n\tbvhHelper1 = new MeshBVHVisualizer( brush1, 20 );\n\tbvhHelper2 = new MeshBVHVisualizer( brush2, 20 );\n\tscene.add( bvhHelper1, bvhHelper2 );\n\n\tbvhHelper1.update();\n\tbvhHelper2.update();\n\n\t// load bunny geometry\n\tconst gltf = await new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/stanford-bunny/bunny.glb' );\n\n\tbunnyGeom = gltf.scene.children[ 0 ].geometry;\n\tbunnyGeom.computeVertexNormals();\n\n\t// gui\n\tgui = new GUI();\n\tgui.add( params, 'operation', { ADDITION, SUBTRACTION, REVERSE_SUBTRACTION, INTERSECTION, DIFFERENCE, HOLLOW_INTERSECTION, HOLLOW_SUBTRACTION } ).onChange( v => {\n\n\t\tneedsUpdate = true;\n\n\t\tif ( v === HOLLOW_INTERSECTION || v === HOLLOW_SUBTRACTION ) {\n\n\t\t\tmaterialMap.forEach( m => m.side = DoubleSide );\n\n\t\t} else {\n\n\t\t\tmaterialMap.forEach( m => m.side = FrontSide );\n\n\t\t}\n\n\t} );\n\tgui.add( params, 'displayBrushes' );\n\tgui.add( params, 'displayControls' );\n\tgui.add( params, 'shadows' );\n\tgui.add( params, 'useGroups' ).onChange( () => needsUpdate = true );\n\tgui.add( params, 'vertexColors' ).onChange( v => {\n\n\t\tbrush1.material.vertexColors = v;\n\t\tbrush1.material.needsUpdate = true;\n\n\t\tbrush2.material.vertexColors = v;\n\t\tbrush2.material.needsUpdate = true;\n\n\t\tmaterialMap.forEach( m => {\n\n\t\t\tm.vertexColors = v;\n\t\t\tm.needsUpdate = true;\n\n\t\t} );\n\n\t\tcsgEvaluator.attributes = v ?\n\t\t\t[ 'color', 'position', 'normal' ] :\n\t\t\t[ 'position', 'normal' ];\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tgui.add( params, 'gridTexture' ).onChange( v => {\n\n\t\tmaterialMap.forEach( ( m1, m2 ) => {\n\n\t\t\tm1.enableGrid = v;\n\t\t\tm2.enableGrid = v;\n\n\t\t} );\n\n\t} );\n\tgui.add( params, 'flatShading' ).onChange( v => {\n\n\t\tbrush1.material.flatShading = v;\n\t\tbrush1.material.needsUpdate = true;\n\n\t\tbrush2.material.flatShading = v;\n\t\tbrush2.material.needsUpdate = true;\n\n\t\tmaterialMap.forEach( m => {\n\n\t\t\tm.flatShading = v;\n\t\t\tm.needsUpdate = true;\n\n\t\t} );\n\n\t} );\n\n\tconst brush1Folder = gui.addFolder( 'brush 1' );\n\tbrush1Folder.add( params, 'brush1Shape', [ 'sphere', 'box', 'cylinder', 'torus', 'torus knot', 'mesh' ] ).name( 'shape' ).onChange( v => {\n\n\t\tupdateBrush( brush1, v, params.brush1Complexity );\n\t\tbvhHelper1.update();\n\n\t} );\n\tbrush1Folder.add( params, 'brush1Complexity', 0, 2 ).name( 'complexity' ).onChange( v => {\n\n\t\tupdateBrush( brush1, params.brush1Shape, v );\n\t\tbvhHelper1.update();\n\n\t} );\n\tbrush1Folder.addColor( params, 'brush1Color' ).onChange( v => {\n\n\t\tbrush1.material.color.set( v );\n\t\tmaterialMap.get( brush1.material ).color.set( v );\n\n\t} );\n\n\tconst brush2Folder = gui.addFolder( 'brush 2' );\n\tbrush2Folder.add( params, 'brush2Shape', [ 'sphere', 'box', 'cylinder', 'torus', 'torus knot', 'mesh' ] ).name( 'shape' ).onChange( v => {\n\n\t\tupdateBrush( brush2, v, params.brush2Complexity );\n\t\tbvhHelper2.update();\n\n\t} );\n\tbrush2Folder.add( params, 'brush2Complexity', 0, 2 ).name( 'complexity' ).onChange( v => {\n\n\t\tupdateBrush( brush2, params.brush2Shape, v );\n\t\tbvhHelper2.update();\n\n\t} );\n\tbrush2Folder.addColor( params, 'brush2Color' ).onChange( v => {\n\n\t\tbrush2.material.color.set( v );\n\t\tmaterialMap.get( brush2.material ).color.set( v );\n\n\t} );\n\n\tconst debugFolder = gui.addFolder( 'debug' );\n\tdebugFolder.add( params, 'enableDebugTelemetry' ).onChange( () => needsUpdate = true );\n\tdebugFolder.add( params, 'displayIntersectionEdges' );\n\tdebugFolder.add( params, 'displayTriangleIntersections' );\n\tdebugFolder.add( params, 'wireframe' );\n\tdebugFolder.add( params, 'displayBrush1BVH' );\n\tdebugFolder.add( params, 'displayBrush2BVH' );\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n\twindow.addEventListener( 'keydown', function ( e ) {\n\n\t\tswitch ( e.code ) {\n\n\t\t\tcase 'KeyW':\n\t\t\t\ttransformControls.setMode( 'translate' );\n\t\t\t\tbreak;\n\t\t\tcase 'KeyE':\n\t\t\t\ttransformControls.setMode( 'rotate' );\n\t\t\t\tbreak;\n\t\t\tcase 'KeyR':\n\t\t\t\ttransformControls.setMode( 'scale' );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t} );\n\n\trender();\n\n}\n\nfunction updateBrush( brush, type, complexity ) {\n\n\tbrush.geometry.dispose();\n\tswitch ( type ) {\n\n\t\tcase 'sphere':\n\t\t\tbrush.geometry = new SphereGeometry(\n\t\t\t\t1,\n\t\t\t\tMath.round( MathUtils.lerp( 5, 32, complexity ) ),\n\t\t\t\tMath.round( MathUtils.lerp( 5, 16, complexity ) )\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'box':\n\t\t\tconst dim = Math.round( MathUtils.lerp( 1, 10, complexity ) );\n\t\t\tbrush.geometry = new BoxGeometry( 1, 1, 1, dim, dim, dim );\n\t\t\tbreak;\n\t\tcase 'cylinder':\n\t\t\tbrush.geometry = new CylinderGeometry(\n\t\t\t\t0.5, 0.5, 1,\n\t\t\t\tMath.round( MathUtils.lerp( 5, 32, complexity ) ),\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'torus':\n\t\t\tbrush.geometry = new TorusGeometry(\n\t\t\t\t0.6,\n\t\t\t\t0.2,\n\t\t\t\tMath.round( MathUtils.lerp( 4, 16, complexity ) ),\n\t\t\t\tMath.round( MathUtils.lerp( 6, 30, complexity ) )\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'torus knot':\n\t\t\tbrush.geometry = new TorusKnotGeometry(\n\t\t\t\t0.6,\n\t\t\t\t0.2,\n\t\t\t\tMath.round( MathUtils.lerp( 16, 64, complexity ) ),\n\t\t\t\tMath.round( MathUtils.lerp( 4, 16, complexity ) ),\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'mesh':\n\t\t\tbrush.geometry = bunnyGeom.clone();\n\t\t\tbreak;\n\n\t}\n\n\tbrush.geometry = brush.geometry.toNonIndexed();\n\n\tconst position = brush.geometry.attributes.position;\n\tconst array = new Float32Array( position.count * 3 );\n\tfor ( let i = 0, l = array.length; i < l; i += 9 ) {\n\n\t\tarray[ i + 0 ] = 1;\n\t\tarray[ i + 1 ] = 0;\n\t\tarray[ i + 2 ] = 0;\n\n\t\tarray[ i + 3 ] = 0;\n\t\tarray[ i + 4 ] = 1;\n\t\tarray[ i + 5 ] = 0;\n\n\t\tarray[ i + 6 ] = 0;\n\t\tarray[ i + 7 ] = 0;\n\t\tarray[ i + 8 ] = 1;\n\n\t}\n\n\tbrush.geometry.setAttribute( 'color', new BufferAttribute( array, 3 ) );\n\tbrush.prepareGeometry();\n\tneedsUpdate = true;\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\tbrush2.scale.x = Math.max( brush2.scale.x, 0.01 );\n\tbrush2.scale.y = Math.max( brush2.scale.y, 0.01 );\n\tbrush2.scale.z = Math.max( brush2.scale.z, 0.01 );\n\n\tconst enableDebugTelemetry = params.enableDebugTelemetry;\n\tif ( needsUpdate ) {\n\n\t\tneedsUpdate = false;\n\n\t\tbrush1.updateMatrixWorld();\n\t\tbrush2.updateMatrixWorld();\n\n\t\tconst startTime = window.performance.now();\n\t\tcsgEvaluator.debug.enabled = enableDebugTelemetry;\n\t\tcsgEvaluator.useGroups = params.useGroups;\n\t\tcsgEvaluator.evaluate( brush1, brush2, params.operation, resultObject );\n\n\t\tif ( params.useGroups ) {\n\n\t\t\tresultObject.material = resultObject.material.map( m => materialMap.get( m ) );\n\n\t\t} else {\n\n\t\t\tresultObject.material = originalMaterial;\n\n\t\t}\n\n\t\tconst deltaTime = window.performance.now() - startTime;\n\t\toutputContainer.innerText = `${ deltaTime.toFixed( 3 ) }ms`;\n\n\t\tif ( enableDebugTelemetry ) {\n\n\t\t\tedgesHelper.setEdges( csgEvaluator.debug.intersectionEdges );\n\n\t\t\ttrisHelper.setTriangles( [\n\t\t\t\t...csgEvaluator.debug.triangleIntersectsA.getTrianglesAsArray(),\n\t\t\t\t...csgEvaluator.debug.triangleIntersectsA.getIntersectionsAsArray()\n\t\t\t] );\n\n\t\t}\n\n\t}\n\n\t// window.CSG_DEBUG = csgEvaluator.debug;\n\t// if ( window.TRI !== undefined ) {\n\n\t// \tconst v = Object.keys( csgEvaluator.debug.triangleIntersectsA.data )[ window.TRI ];\n\t// \tconst _matrix = new Matrix4();\n\t// \t_matrix\n\t// \t\t.copy( brush2.matrixWorld )\n\t// \t\t.invert()\n\t// \t\t.multiply( brush1.matrixWorld );\n\n\n\t// \t// This is the space that clipping happens in\n\t// \tconst tris = [\n\t// \t\t...csgEvaluator.debug.triangleIntersectsA.getTrianglesAsArray( v ),\n\t// \t\t...csgEvaluator.debug.triangleIntersectsA.getIntersectionsAsArray( v ),\n\t// \t].map( t => {\n\n\t// \t\tt = t.clone();\n\t// \t\tt.a.applyMatrix4( _matrix );\n\t// \t\tt.b.applyMatrix4( _matrix );\n\t// \t\tt.c.applyMatrix4( _matrix );\n\t// \t\treturn t;\n\n\t// \t} );\n\n\t// \ttrisHelper.setTriangles( [ ...tris ] );\n\t// \tlogTriangleDefinitions( ...tris );\n\n\t// }\n\n\twireframeResult.visible = params.wireframe;\n\tbrush1.visible = params.displayBrushes;\n\tbrush2.visible = params.displayBrushes;\n\n\tlight.castShadow = params.shadows;\n\n\ttransformControls.enabled = params.displayControls;\n\ttransformControls.visible = params.displayControls;\n\n\tedgesHelper.visible = enableDebugTelemetry && params.displayIntersectionEdges;\n\ttrisHelper.visible = enableDebugTelemetry && params.displayTriangleIntersections;\n\n\tbvhHelper1.visible = params.displayBrush1BVH;\n\tbvhHelper2.visible = params.displayBrush2BVH;\n\n\trenderer.render( scene, camera );\n\n}\n\n\n\n"],"names":["$ilwiq","parcelRequire","window","logTriangleDefinitions","$4CEV9","$07b869f43f84f999$var$params","brush1Shape","brush1Complexity","brush1Color","brush2Shape","brush2Complexity","brush2Color","operation","SUBTRACTION","wireframe","displayBrushes","displayControls","shadows","vertexColors","flatShading","gridTexture","useGroups","enableDebugTelemetry","displayIntersectionEdges","displayTriangleIntersections","displayBrush1BVH","displayBrush2BVH","$07b869f43f84f999$var$renderer","$07b869f43f84f999$var$camera","$07b869f43f84f999$var$scene","$07b869f43f84f999$var$gui","$07b869f43f84f999$var$outputContainer","$07b869f43f84f999$var$controls","$07b869f43f84f999$var$transformControls","$07b869f43f84f999$var$brush1","$07b869f43f84f999$var$brush2","$07b869f43f84f999$var$resultObject","$07b869f43f84f999$var$wireframeResult","$07b869f43f84f999$var$light","$07b869f43f84f999$var$originalMaterial","$07b869f43f84f999$var$edgesHelper","$07b869f43f84f999$var$trisHelper","$07b869f43f84f999$var$bvhHelper1","$07b869f43f84f999$var$bvhHelper2","$07b869f43f84f999$var$bunnyGeom","$07b869f43f84f999$var$csgEvaluator","$07b869f43f84f999$var$needsUpdate","$07b869f43f84f999$var$materialMap","Map","$07b869f43f84f999$var$updateBrush","brush","type","complexity","geometry","dispose","SphereGeometry","Math","round","MathUtils","lerp","dim","BoxGeometry","CylinderGeometry","TorusGeometry","TorusKnotGeometry","clone","toNonIndexed","position","attributes","array","Float32Array","count","i","l","length","setAttribute","BufferAttribute","prepareGeometry","$07b869f43f84f999$var$render","requestAnimationFrame","scale","x","max","y","z","updateMatrixWorld","startTime","performance","now","debug","enabled","evaluate","material","map","m","get","deltaTime","innerText","toFixed","setEdges","intersectionEdges","setTriangles","triangleIntersectsA","getTrianglesAsArray","getIntersectionsAsArray","visible","castShadow","render","async","document","getElementById","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","setClearColor","shadowMap","PCFSoftShadowMap","body","appendChild","domElement","Scene","DirectionalLight","set","add","target","AmbientLight","shadowCam","shadow","camera","mat","mapSize","setScalar","bias","normalBias","left","bottom","right","top","updateProjectionMatrix","PerspectiveCamera","far","$5Rd1x","OrbitControls","$fUhpq","TransformControls","addEventListener","e","value","Evaluator","Brush","GridMaterial","opacity","transparent","depthWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","side","DoubleSide","premultipliedAlpha","roughness","color","receiveShadow","attach","FrontSide","forEach","m1","m2","enableGrid","Mesh","BufferGeometry","MeshStandardMaterial","MeshBasicMaterial","EdgesHelper","TriangleSetHelper","$8Zfx2","MeshBVHVisualizer","update","gltf","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","scene","children","computeVertexNormals","$jiuw3","GUI","ADDITION","REVERSE_SUBTRACTION","INTERSECTION","DIFFERENCE","HOLLOW_INTERSECTION","HOLLOW_SUBTRACTION","onChange","v","needsUpdate","brush1Folder","addFolder","name","addColor","brush2Folder","debugFolder","aspect","code","setMode","$07b869f43f84f999$var$init"],"version":3,"file":"simple.5d9f0c3e.js.map"}
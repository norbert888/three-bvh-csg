{"mappings":"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","sources":["examples/hollow.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport {\n\tBrush,\n\tEvaluator,\n\tHOLLOW_SUBTRACTION,\n\tHOLLOW_INTERSECTION,\n} from '..';\n\nlet renderer, camera, scene, light, controls;\nlet brush1, brush2, result, gui;\nlet csgEvaluator = new Evaluator();\ncsgEvaluator.attributes = [ 'position', 'normal', 'color' ];\ncsgEvaluator.useGroups = false;\n\nconst params = {\n\tdisplayBrush: true,\n\toperation: HOLLOW_INTERSECTION,\n};\n\ninit();\n\nasync function init() {\n\n\tconst bgColor = 0x111111;\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.shadowMap.enabled = true;\n\trenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\n\t// lights\n\tlight = new THREE.DirectionalLight( 0xffffff, 3.5 );\n\tlight.position.set( 1, 2, 1 );\n\tscene.add( light, new THREE.AmbientLight( 0xb0bec5, 0.35 ) );\n\n\t// shadows\n\tconst shadowCam = light.shadow.camera;\n\tlight.castShadow = true;\n\tlight.shadow.mapSize.setScalar( 4096 );\n\tlight.shadow.bias = - 1e-5;\n\n\tshadowCam.left = shadowCam.bottom = - 3.5;\n\tshadowCam.right = shadowCam.top = 3.5;\n\tshadowCam.updateProjectionMatrix();\n\n\tbrush1 = new Brush(\n\t\tgenerateTriangleGeometry(),\n\t\tnew THREE.MeshStandardMaterial( {\n\t\t\tvertexColors: true,\n\t\t\tside: THREE.DoubleSide,\n\t\t\troughness: 0.2,\n\t\t} ),\n\t);\n\n\tbrush2 = new Brush(\n\t\tnew THREE.SphereGeometry(),\n\t\tnew THREE.MeshBasicMaterial( {\n\t\t\tcolor: 0xffffff,\n\t\t\ttransparent: true,\n\t\t\tdepthWrite: false,\n\t\t\topacity: 0.1,\n\t\t\tside: THREE.BackSide,\n\t\t} ),\n\t);\n\tbrush2.scale.setScalar( 2 );\n\tscene.add( brush2 );\n\n\tresult = new THREE.Mesh();\n\tscene.add( result );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( - 1.25, 1.5, 2.5 ).multiplyScalar( 2.5 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\t// controls\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\t// floor\n\tconst floor = new THREE.Mesh(\n\t\tnew THREE.PlaneGeometry(),\n\t\tnew THREE.ShadowMaterial( {\n\t\t\topacity: 0.05,\n\t\t\tdepthWrite: false,\n\t\t\ttransparent: true,\n\t\t} ),\n\t);\n\tfloor.material.color.set( 0xE0F7FA );\n\tfloor.rotation.x = - Math.PI / 2;\n\tfloor.scale.setScalar( 10 );\n\tfloor.position.y = - 3;\n\tfloor.receiveShadow = true;\n\tscene.add( floor );\n\n\tgui = new GUI();\n\tgui.add( params, 'operation', { NONE: - 1, HOLLOW_INTERSECTION, HOLLOW_SUBTRACTION } );\n\tgui.add( params, 'displayBrush' );\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n\trender();\n\n}\n\nfunction generateTriangleGeometry() {\n\n\t// From three.js \"webgl_interactive_buffergeometry\" example\n\tconst triangles = 5000;\n\n\tlet geometry = new THREE.BufferGeometry();\n\n\tconst positions = new Float32Array( triangles * 3 * 3 );\n\tconst normals = new Float32Array( triangles * 3 * 3 );\n\tconst colors = new Float32Array( triangles * 3 * 3 );\n\n\tconst color = new THREE.Color();\n\n\tconst n = 800, n2 = n / 2;\t// triangles spread in the cube\n\tconst d = 120, d2 = d / 2;\t// individual triangle size\n\n\tconst pA = new THREE.Vector3();\n\tconst pB = new THREE.Vector3();\n\tconst pC = new THREE.Vector3();\n\n\tconst cb = new THREE.Vector3();\n\tconst ab = new THREE.Vector3();\n\n\tfor ( let i = 0; i < positions.length; i += 9 ) {\n\n\t\t// positions\n\n\t\tconst x = Math.random() * n - n2;\n\t\tconst y = Math.random() * n - n2;\n\t\tconst z = Math.random() * n - n2;\n\n\t\tconst ax = x + Math.random() * d - d2;\n\t\tconst ay = y + Math.random() * d - d2;\n\t\tconst az = z + Math.random() * d - d2;\n\n\t\tconst bx = x + Math.random() * d - d2;\n\t\tconst by = y + Math.random() * d - d2;\n\t\tconst bz = z + Math.random() * d - d2;\n\n\t\tconst cx = x + Math.random() * d - d2;\n\t\tconst cy = y + Math.random() * d - d2;\n\t\tconst cz = z + Math.random() * d - d2;\n\n\t\tpositions[ i ] = ax;\n\t\tpositions[ i + 1 ] = ay;\n\t\tpositions[ i + 2 ] = az;\n\n\t\tpositions[ i + 3 ] = bx;\n\t\tpositions[ i + 4 ] = by;\n\t\tpositions[ i + 5 ] = bz;\n\n\t\tpositions[ i + 6 ] = cx;\n\t\tpositions[ i + 7 ] = cy;\n\t\tpositions[ i + 8 ] = cz;\n\n\t\t// flat face normals\n\n\t\tpA.set( ax, ay, az );\n\t\tpB.set( bx, by, bz );\n\t\tpC.set( cx, cy, cz );\n\n\t\tcb.subVectors( pC, pB );\n\t\tab.subVectors( pA, pB );\n\t\tcb.cross( ab );\n\n\t\tcb.normalize();\n\n\t\tconst nx = cb.x;\n\t\tconst ny = cb.y;\n\t\tconst nz = cb.z;\n\n\t\tnormals[ i ] = nx;\n\t\tnormals[ i + 1 ] = ny;\n\t\tnormals[ i + 2 ] = nz;\n\n\t\tnormals[ i + 3 ] = nx;\n\t\tnormals[ i + 4 ] = ny;\n\t\tnormals[ i + 5 ] = nz;\n\n\t\tnormals[ i + 6 ] = nx;\n\t\tnormals[ i + 7 ] = ny;\n\t\tnormals[ i + 8 ] = nz;\n\n\t\t// colors\n\n\t\tconst vx = ( x / n ) + 0.5;\n\t\tconst vy = ( y / n ) + 0.5;\n\t\tconst vz = ( z / n ) + 0.5;\n\n\t\tcolor.setRGB( vx, vy, vz );\n\n\t\tcolors[ i ] = color.r;\n\t\tcolors[ i + 1 ] = color.g;\n\t\tcolors[ i + 2 ] = color.b;\n\n\t\tcolors[ i + 3 ] = color.r;\n\t\tcolors[ i + 4 ] = color.g;\n\t\tcolors[ i + 5 ] = color.b;\n\n\t\tcolors[ i + 6 ] = color.r;\n\t\tcolors[ i + 7 ] = color.g;\n\t\tcolors[ i + 8 ] = color.b;\n\n\t}\n\n\tgeometry.setAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\tgeometry.setAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\tgeometry.setAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\tgeometry.scale( 0.0055, 0.0055, 0.0055 );\n\n\treturn geometry;\n\n}\n\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\tbrush2.position.y = 2 * Math.sin( window.performance.now() * 0.0025 * 0.5 );\n\tbrush2.position.x = 2 * Math.sin( window.performance.now() * 0.0035 * 0.5 );\n\tbrush2.position.z = 2 * Math.sin( window.performance.now() * 0.002 * 0.5 );\n\tbrush2.visible = params.displayBrush;\n\tbrush2.updateMatrixWorld( true );\n\n\tif ( params.operation === - 1 ) {\n\n\t\tresult.geometry.dispose();\n\t\tresult.geometry.copy( brush1.geometry );\n\n\t} else {\n\n\t\tresult = csgEvaluator.evaluate( brush1, brush2, params.operation, result );\n\t\tresult.castShadow = true;\n\t\tresult.receiveShadow = true;\n\n\t}\n\n\trenderer.render( scene, camera );\n\n}\n\n\n\n"],"names":["$ilwiq","parcelRequire","$872842385af1e371$var$renderer","$872842385af1e371$var$camera","$872842385af1e371$var$scene","$872842385af1e371$var$light","$872842385af1e371$var$controls","$872842385af1e371$var$brush1","$872842385af1e371$var$brush2","$872842385af1e371$var$result","$872842385af1e371$var$gui","$872842385af1e371$var$csgEvaluator","$4CEV9","Evaluator","attributes","useGroups","$872842385af1e371$var$params","displayBrush","operation","HOLLOW_INTERSECTION","$872842385af1e371$var$render","requestAnimationFrame","position","y","Math","sin","window","performance","now","x","z","visible","updateMatrixWorld","geometry","dispose","copy","evaluate","castShadow","receiveShadow","render","async","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","setClearColor","shadowMap","enabled","type","PCFSoftShadowMap","document","body","appendChild","domElement","Scene","DirectionalLight","set","add","AmbientLight","shadowCam","shadow","camera","mapSize","setScalar","bias","left","bottom","right","top","updateProjectionMatrix","Brush","triangles","BufferGeometry","positions","Float32Array","normals","colors","color","Color","n","n2","d","d2","pA","Vector3","pB","pC","cb","ab","i","length","random","ax","ay","az","bx","by","bz","cx","cy","cz","subVectors","cross","normalize","nx","ny","nz","vx","vy","vz","setRGB","r","g","b","setAttribute","BufferAttribute","scale","$872842385af1e371$var$generateTriangleGeometry","MeshStandardMaterial","vertexColors","side","DoubleSide","roughness","SphereGeometry","MeshBasicMaterial","transparent","depthWrite","opacity","BackSide","Mesh","PerspectiveCamera","multiplyScalar","far","$5Rd1x","OrbitControls","floor","PlaneGeometry","ShadowMaterial","material","rotation","PI","$jiuw3","GUI","NONE","HOLLOW_SUBTRACTION","addEventListener","aspect","$872842385af1e371$var$init"],"version":3,"file":"hollow.943789c8.js.map"}
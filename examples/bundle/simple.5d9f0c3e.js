var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},a={},t={},r=e.parcelRequirefee5;null==r&&((r=function(e){if(e in a)return a[e].exports;if(e in t){var r=t[e];delete t[e];var o={id:e,exports:{}};return a[e]=o,r.call(o.exports,o,o.exports),o.exports}var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,a){t[e]=a},e.parcelRequirefee5=r);var o=r("ilwiq"),n=r("jiuw3"),i=r("fUhpq"),s=r("5Rd1x"),d=r("7lx9d"),l=r("kp7Te"),h=r("8Zfx2"),p=r("4CEV9");window.logTriangleDefinitions=p.logTriangleDefinitions;const u={brush1Shape:"box",brush1Complexity:1,brush1Color:"#ffffff",brush2Shape:"sphere",brush2Complexity:1,brush2Color:"#E91E63",operation:p.SUBTRACTION,wireframe:!1,displayBrushes:!0,displayControls:!0,shadows:!0,vertexColors:!1,flatShading:!1,gridTexture:!1,useGroups:!0,enableDebugTelemetry:!0,displayIntersectionEdges:!1,displayTriangleIntersections:!1,displayBrush1BVH:!1,displayBrush2BVH:!1};let m,c,g,w,y,b,f,C,S,T,x,E,M,O,B,I,v,U,N,R=!0;const A=new Map;function G(e,a,t){switch(e.geometry.dispose(),a){case"sphere":e.geometry=new(0,o.SphereGeometry)(1,Math.round(o.MathUtils.lerp(5,32,t)),Math.round(o.MathUtils.lerp(5,16,t)));break;case"box":const a=Math.round(o.MathUtils.lerp(1,10,t));e.geometry=new(0,o.BoxGeometry)(1,1,1,a,a,a);break;case"cylinder":e.geometry=new(0,o.CylinderGeometry)(.5,.5,1,Math.round(o.MathUtils.lerp(5,32,t)));break;case"torus":e.geometry=new(0,o.TorusGeometry)(.6,.2,Math.round(o.MathUtils.lerp(4,16,t)),Math.round(o.MathUtils.lerp(6,30,t)));break;case"torus knot":e.geometry=new(0,o.TorusKnotGeometry)(.6,.2,Math.round(o.MathUtils.lerp(16,64,t)),Math.round(o.MathUtils.lerp(4,16,t)));break;case"mesh":e.geometry=U.clone()}e.geometry=e.geometry.toNonIndexed();const r=e.geometry.attributes.position,n=new Float32Array(3*r.count);for(let e=0,a=n.length;e<a;e+=9)n[e+0]=1,n[e+1]=0,n[e+2]=0,n[e+3]=0,n[e+4]=1,n[e+5]=0,n[e+6]=0,n[e+7]=0,n[e+8]=1;e.geometry.setAttribute("color",new(0,o.BufferAttribute)(n,3)),e.prepareGeometry(),R=!0}function L(){requestAnimationFrame(L),S.scale.x=Math.max(S.scale.x,.01),S.scale.y=Math.max(S.scale.y,.01),S.scale.z=Math.max(S.scale.z,.01);const e=u.enableDebugTelemetry;if(R){R=!1,C.updateMatrixWorld(),S.updateMatrixWorld();const a=window.performance.now();N.debug.enabled=e,N.useGroups=u.useGroups,N.evaluate(C,S,u.operation,T),u.useGroups?T.material=T.material.map((e=>A.get(e))):T.material=M;const t=window.performance.now()-a;y.innerText=`${t.toFixed(3)}ms`,e&&(O.setEdges(N.debug.intersectionEdges),B.setTriangles([...N.debug.triangleIntersectsA.getTrianglesAsArray(),...N.debug.triangleIntersectsA.getIntersectionsAsArray()]))}x.visible=u.wireframe,C.visible=u.displayBrushes,S.visible=u.displayBrushes,E.castShadow=u.shadows,f.enabled=u.displayControls,f.visible=u.displayControls,O.visible=e&&u.displayIntersectionEdges,B.visible=e&&u.displayTriangleIntersections,I.visible=u.displayBrush1BVH,v.visible=u.displayBrush2BVH,m.render(g,c)}!async function(){y=document.getElementById("output"),m=new(0,o.WebGLRenderer)({antialias:!0}),m.setPixelRatio(window.devicePixelRatio),m.setSize(window.innerWidth,window.innerHeight),m.setClearColor(1118481,1),m.shadowMap.enabled=!0,m.shadowMap.type=o.PCFSoftShadowMap,document.body.appendChild(m.domElement),g=new(0,o.Scene),E=new(0,o.DirectionalLight)(16777215,3.5),E.position.set(-1,2,3),g.add(E,E.target),g.add(new(0,o.AmbientLight)(11583173,.35));const e=E.shadow.camera;let a;E.castShadow=!0,E.shadow.mapSize.setScalar(4096),E.shadow.bias=1e-5,E.shadow.normalBias=.01,e.left=e.bottom=-2.5,e.right=e.top=2.5,e.updateProjectionMatrix(),c=new(0,o.PerspectiveCamera)(75,window.innerWidth/window.innerHeight,.1,50),c.position.set(1,2,4),c.far=100,c.updateProjectionMatrix(),b=new(0,s.OrbitControls)(c,m.domElement),f=new(0,i.TransformControls)(c,m.domElement),f.setSize(.75),f.addEventListener("dragging-changed",(e=>{b.enabled=!e.value})),f.addEventListener("objectChange",(()=>{R=!0})),g.add(f),N=new(0,p.Evaluator),N.attributes=["position","normal"],C=new(0,p.Brush)(new(0,o.BoxGeometry),new(0,p.GridMaterial)),S=new(0,p.Brush)(new(0,o.BoxGeometry),new(0,p.GridMaterial)),S.position.set(-.75,.75,0),S.scale.setScalar(.75),G(C,u.brush1Shape,u.brush1Complexity),G(S,u.brush2Shape,u.brush2Complexity),C.material.opacity=.15,C.material.transparent=!0,C.material.depthWrite=!1,C.material.polygonOffset=!0,C.material.polygonOffsetFactor=.2,C.material.polygonOffsetUnits=.2,C.material.side=o.DoubleSide,C.material.premultipliedAlpha=!0,S.material.opacity=.15,S.material.transparent=!0,S.material.depthWrite=!1,S.material.polygonOffset=!0,S.material.polygonOffsetFactor=.2,S.material.polygonOffsetUnits=.2,S.material.side=o.DoubleSide,S.material.premultipliedAlpha=!0,S.material.roughness=.25,S.material.color.set(15277667),C.receiveShadow=!0,S.receiveShadow=!0,f.attach(S),g.add(C,S),a=C.material.clone(),a.side=o.FrontSide,a.opacity=1,a.transparent=!1,a.depthWrite=!0,A.set(C.material,a),a=S.material.clone(),a.side=o.FrontSide,a.opacity=1,a.transparent=!1,a.depthWrite=!0,A.set(S.material,a),A.forEach(((e,a)=>{e.enableGrid=u.gridTexture,a.enableGrid=u.gridTexture})),T=new(0,o.Mesh)(new(0,o.BufferGeometry),new(0,o.MeshStandardMaterial)({flatShading:!1,polygonOffset:!0,polygonOffsetUnits:.1,polygonOffsetFactor:.1})),T.castShadow=!0,T.receiveShadow=!0,M=T.material,g.add(T),x=new(0,o.Mesh)(T.geometry,new(0,o.MeshBasicMaterial)({wireframe:!0,color:0,opacity:.15,transparent:!0})),g.add(x),O=new(0,p.EdgesHelper),O.color.set(15277667),g.add(O),B=new(0,p.TriangleSetHelper),B.color.set(48340),g.add(B),I=new(0,h.MeshBVHVisualizer)(C,20),v=new(0,h.MeshBVHVisualizer)(S,20),g.add(I,v),I.update(),v.update();const t=await(new(0,d.GLTFLoader)).setMeshoptDecoder(l.MeshoptDecoder).loadAsync("https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/stanford-bunny/bunny.glb");U=t.scene.children[0].geometry,U.computeVertexNormals(),w=new(0,n.GUI),w.add(u,"operation",{ADDITION:p.ADDITION,SUBTRACTION:p.SUBTRACTION,REVERSE_SUBTRACTION:p.REVERSE_SUBTRACTION,INTERSECTION:p.INTERSECTION,DIFFERENCE:p.DIFFERENCE,HOLLOW_INTERSECTION:p.HOLLOW_INTERSECTION,HOLLOW_SUBTRACTION:p.HOLLOW_SUBTRACTION}).onChange((e=>{R=!0,e===p.HOLLOW_INTERSECTION||e===p.HOLLOW_SUBTRACTION?A.forEach((e=>e.side=o.DoubleSide)):A.forEach((e=>e.side=o.FrontSide))})),w.add(u,"displayBrushes"),w.add(u,"displayControls"),w.add(u,"shadows"),w.add(u,"useGroups").onChange((()=>R=!0)),w.add(u,"vertexColors").onChange((e=>{C.material.vertexColors=e,C.material.needsUpdate=!0,S.material.vertexColors=e,S.material.needsUpdate=!0,A.forEach((a=>{a.vertexColors=e,a.needsUpdate=!0})),N.attributes=e?["color","position","normal"]:["position","normal"],R=!0})),w.add(u,"gridTexture").onChange((e=>{A.forEach(((a,t)=>{a.enableGrid=e,t.enableGrid=e}))})),w.add(u,"flatShading").onChange((e=>{C.material.flatShading=e,C.material.needsUpdate=!0,S.material.flatShading=e,S.material.needsUpdate=!0,A.forEach((a=>{a.flatShading=e,a.needsUpdate=!0}))}));const r=w.addFolder("brush 1");r.add(u,"brush1Shape",["sphere","box","cylinder","torus","torus knot","mesh"]).name("shape").onChange((e=>{G(C,e,u.brush1Complexity),I.update()})),r.add(u,"brush1Complexity",0,2).name("complexity").onChange((e=>{G(C,u.brush1Shape,e),I.update()})),r.addColor(u,"brush1Color").onChange((e=>{C.material.color.set(e),A.get(C.material).color.set(e)}));const H=w.addFolder("brush 2");H.add(u,"brush2Shape",["sphere","box","cylinder","torus","torus knot","mesh"]).name("shape").onChange((e=>{G(S,e,u.brush2Complexity),v.update()})),H.add(u,"brush2Complexity",0,2).name("complexity").onChange((e=>{G(S,u.brush2Shape,e),v.update()})),H.addColor(u,"brush2Color").onChange((e=>{S.material.color.set(e),A.get(S.material).color.set(e)}));const D=w.addFolder("debug");D.add(u,"enableDebugTelemetry").onChange((()=>R=!0)),D.add(u,"displayIntersectionEdges"),D.add(u,"displayTriangleIntersections"),D.add(u,"wireframe"),D.add(u,"displayBrush1BVH"),D.add(u,"displayBrush2BVH"),window.addEventListener("resize",(function(){c.aspect=window.innerWidth/window.innerHeight,c.updateProjectionMatrix(),m.setSize(window.innerWidth,window.innerHeight)}),!1),window.addEventListener("keydown",(function(e){switch(e.code){case"KeyW":f.setMode("translate");break;case"KeyE":f.setMode("rotate");break;case"KeyR":f.setMode("scale")}})),L()}();
//# sourceMappingURL=simple.5d9f0c3e.js.map
